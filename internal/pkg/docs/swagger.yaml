definitions:
  models.Note:
    properties:
      create_time:
        type: string
      data:
        items:
          type: integer
        type: array
      id:
        type: string
      owner_id:
        type: string
      update_time:
        type: string
    type: object
  models.ProfileUpdatePayload:
    properties:
      description:
        type: string
      password:
        $ref: '#/definitions/models.passwords'
    type: object
  models.User:
    properties:
      create_time:
        type: string
      description:
        type: string
      id:
        type: string
      image_path:
        type: string
      username:
        type: string
    type: object
  models.UserFormData:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.passwords:
    properties:
      new:
        type: string
      old:
        type: string
    type: object
  utils.ErrorResponse:
    properties:
      message:
        type: string
    type: object
host: you-note.ru:8080
info:
  contact: {}
  description: API for YouNote service
  title: YouNote API
  version: "1.0"
paths:
  /api/auth/check_user:
    get:
      description: Get user info if user is authorized
      operationId: check-user
      produces:
      - application/json
      responses:
        "200":
          description: user
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
      summary: Check user
      tags:
      - auth
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login as a user
      operationId: sign-in
      parameters:
      - description: login data
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.UserFormData'
      produces:
      - application/json
      responses:
        "200":
          description: user
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "401":
          description: error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Sign in
      tags:
      - auth
  /api/auth/logout:
    delete:
      description: Quit from user`s account
      operationId: log-out
      responses:
        "204":
          description: No Content
      summary: Log out
      tags:
      - auth
  /api/auth/signup:
    post:
      consumes:
      - application/json
      description: Add a new user to the database
      operationId: sign-up
      parameters:
      - description: registration data
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.UserFormData'
      produces:
      - application/json
      responses:
        "200":
          description: user
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Sign up
      tags:
      - auth
  /api/note/{id}:
    get:
      description: Get one of notes of current user
      operationId: get-note
      parameters:
      - description: note id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: note
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: incorrect id
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "401":
          description: Unauthorized
        "404":
          description: note not found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get one note
      tags:
      - note
  /api/note/add:
    post:
      description: Create new note to current user
      operationId: add-note
      produces:
      - application/json
      responses:
        "200":
          description: note
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "401":
          description: Unauthorized
      summary: Add note
      tags:
      - note
  /api/note/get_all:
    get:
      description: Get a list of notes of current user
      operationId: get-all-notes
      parameters:
      - description: notes count
        in: query
        name: count
        type: integer
      - description: notes offset
        in: query
        name: offset
        type: integer
      - description: notes title substring
        in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: notes
          schema:
            items:
              $ref: '#/definitions/models.Note'
            type: array
        "400":
          description: error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "401":
          description: Unauthorized
      summary: Get all notes
      tags:
      - note
  /api/profile/update:
    post:
      consumes:
      - application/json
      description: Change password and/or description
      operationId: update-profile
      parameters:
      - description: update data
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.ProfileUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: user
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Update profile
      tags:
      - profile
  /api/profile/update_avatar:
    post:
      consumes:
      - multipart/form-data
      description: Change avatar
      operationId: update-profile-avatar
      produces:
      - application/json
      responses:
        "200":
          description: user
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "413":
          description: Request Entity Too Large
      summary: Update profile avatar
      tags:
      - profile
swagger: "2.0"
